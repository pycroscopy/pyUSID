name: build

env:
  PYTHON_MAIN_VERSION: 3.9
  
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
    tags:
        - '*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: install package
      run: |
        pip install .
        pip list
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
        
    - name: Upload coverage to Codecov
      if: ${{ matrix.python-version == env.PYTHON_MAIN_VERSION }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        # directory: ./coverage/reports/
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        # path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
        
        
    - name: Documentation build
      if: ${{ matrix.python-version == env.PYTHON_MAIN_VERSION && github.ref == 'refs/heads/main'}} 
      run: |
        pip install sphinx>=3.1.1 sphinx-gallery sphinx-rtd-theme>=0.5.0 sphinx-autodoc-typehints numpydoc wget pysptools cvxopt scipy nbsphinx
        sudo apt-get install pandoc
        sphinx-build -b html -aET docs/source docs/_build/html
        touch docs/_build/html/.nojekyll
        
    - name: Deploy to GitHub Pages
      if: ${{ matrix.python-version == env.PYTHON_MAIN_VERSION && github.ref == 'refs/heads/main'}} 
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: docs/_build/html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      
    - name: Upload to PyPi
      if: startsWith( github.ref, 'refs/tags') && matrix.python-version == env.PYTHON_MAIN_VERSION
      env: 
        PYPI_TOKEN_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        pip install wheel twine
        python setup.py sdist bdist_wheel
        twine upload --username "__token__" --password $PYPI_TOKEN_PASSWORD dist/*
